void handle_mtx_err(int status, t_type type)
{
	if (status == 0)
		return;
	else if (EINVAL == status && (type == LOCK || type == UNLOCK || type == DESTROY))
		print_err("Mutex Err");
	else if (EDEADLK == status || EPERM == status || ENOMEM == status || EBUSY == status)
		print_err("Mutex Err");
}

void	handle_mutex(t_type type, pthread_mutex_t *mtx)
{
	if (type == LOCK)
		handle_mtx_err(pthread_mutex_lock(mtx), type);
	else if (type == UNLOCK)
		handle_mtx_err(pthread_mutex_unlock(mtx), type);
	else if (type == INIT)
		handle_mtx_err(pthread_mutex_init(mtx, NULL), type);
	else if (type == DESTROY)
		handle_mtx_err(pthread_mutex_destroy(mtx), type);
	else
		print_err("Error type given");
}

void	*ft_malloc(size_t size)
{
	void	*res;

	res = malloc(size);
	if (!res)
		print_err("Malloc fail");
	return (res);
}